{"version":3,"sources":["components/Reviews/Reviews.module.css","components/NotFound/NotFound.module.css","components/NotFound/NotFound.jsx","components/Reviews/Reviews.jsx"],"names":["module","exports","NotFound","className","styles","P","Reviews","state","reviews","id","this","props","API","then","data","setState","reviewsMapper","results","catch","error","Error","text","length","Ul","map","author","content","key","p","Component"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,GAAK,oBAAoB,EAAI,qB,mBCA/CD,EAAOC,QAAU,CAAC,EAAI,sB,qKCUPC,EARE,WACf,OACE,6BACE,uBAAGC,UAAWC,IAAOC,GAArB,+C,gBCAeC,E,4MACnBC,MAAQ,CACNC,QAAS,I,kEAGU,IAAD,OACVC,EAAOC,KAAKC,MAAZF,GAERG,IAAeH,GACZI,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OACJ,EAAKC,SAAS,CAAEP,QAASQ,YAAcF,EAAKG,cAE7CC,OAAM,SAAAC,GACLC,MAAM,CACJC,KAAMF,S,6CAKZT,KAAKK,SAAS,CAAEP,QAAS,O,+BAGjB,IACAA,EAAYE,KAAKH,MAAjBC,QAER,OACE,+BACKA,EAAQc,QACT,wBAAInB,UAAWC,IAAOmB,IACnBf,EAAQgB,KAAI,gBAAGf,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,wBAAIC,IAAKlB,GACP,uBAAGN,UAAWC,IAAOwB,GAArB,WAAiCH,GACjC,2BAAIC,QAKQ,IAAnBlB,EAAQc,QAAgB,kBAAC,EAAD,W,GArCIO","file":"static/js/reviews.7ebc6ea8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Ul\":\"Reviews_Ul__sXhH9\",\"p\":\"Reviews_p__2dGgk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"P\":\"NotFound_P__1vfTJ\"};","import React from 'react';\nimport styles from '../NotFound/NotFound.module.css';\n\nconst NotFound = () => {\n  return (\n    <div>\n      <p className={styles.P}>We don't have any reviews for this movie.</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport styles from '../Reviews/Reviews.module.css';\nimport NotFound from '../../components/NotFound/NotFound';\nimport { reviewsMapper } from '../../functions/mappers';\nimport * as API from '../../services/movies-api';\n\nexport default class Reviews extends Component {\n  state = {\n    reviews: [],\n  };\n\n  componentDidMount() {\n    const { id } = this.props;\n\n    API.getReviews(id)\n      .then(({ data }) =>\n        this.setState({ reviews: reviewsMapper(data.results) }),\n      )\n      .catch(error => {\n        Error({\n          text: error,\n        });\n      });\n  }\n  componentWillUnmount() {\n    this.setState({ reviews: [] });\n  }\n\n  render() {\n    const { reviews } = this.state;\n\n    return (\n      <div>\n        {!!reviews.length && (\n          <ul className={styles.Ul}>\n            {reviews.map(({ id, author, content }) => (\n              <li key={id}>\n                <p className={styles.p}>Author: {author}</p>\n                <p>{content}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n        {reviews.length === 0 && <NotFound />}\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}